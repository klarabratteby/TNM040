{"ast":null,"code":"var _jsxFileName = \"/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport countries from 'world-countries'; // Sort/slice the countries.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ncountries.sort((a, b) => b.area - a.area); // Sorted by area.\n\nconst Filtered = countries.filter(_c = country => country.name.common !== 'Antarctica'); //Remove Antartica\n\n_c2 = Filtered;\nconst Sliced = Filtered.slice(0, 15); // Slice Filter, new list!\n\nconst FirstList = Filtered.slice(0, 5); // First five.\n\nconst SecondList = Filtered.slice(6, 15); // \n// Component CountryInfo, creates div-elemnt. Country Info displays information about a country.\n\nconst CountryInfo = ({\n  data,\n  maxwidth,\n  details\n}) => {\n  console.log(data);\n  let ratio = data.area / maxwidth;\n  let bredd = ratio * 100 + \"%\";\n  let mil = data.area / 1000000;\n  mil = mil.toFixed(1); //one decimal.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"name\",\n        children: data.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"area\",\n        children: [mil, \" million km \", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 80\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar\",\n        style: {\n          width: bredd\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", details // boolean prop details.\n        ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Capital: \", data.capital, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 39\n          }, this), \" Region: \", data.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // Creates props\n\n\n_c3 = CountryInfo;\n\nfunction App() {\n  console.log(Sliced);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colum\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: FirstList.map(country => /*#__PURE__*/_jsxDEV(CountryInfo, {\n          Key: country.cca3,\n          details: true,\n          data: country,\n          maxwidth: countries[0].area\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: SecondList.map(country => /*#__PURE__*/_jsxDEV(CountryInfo, {\n          Key: country.cca3,\n          details: false,\n          data: country,\n          maxwidth: countries[0].area\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filtered$countries.filter\");\n$RefreshReg$(_c2, \"Filtered\");\n$RefreshReg$(_c3, \"CountryInfo\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js"],"names":["countries","sort","a","b","area","Filtered","filter","country","name","common","Sliced","slice","FirstList","SecondList","CountryInfo","data","maxwidth","details","console","log","ratio","bredd","mil","toFixed","width","capital","subregion","App","map","cca3"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,iBAAtB,C,CAEA;;;;AACAA,SAAS,CAACC,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,IAAF,GAAOF,CAAC,CAACE,IAAjC,E,CAAwC;;AACxC,MAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAV,MAAiBC,OAAO,IAAGA,OAAO,CAACC,IAAR,CAAaC,MAAb,KAAwB,YAAnD,CAAjB,C,CAAmF;;MAA7EJ,Q;AACN,MAAMK,MAAM,GAAGL,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,EAAjB,CAAf,C,CAAqC;;AACrC,MAAMC,SAAS,GAAGP,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,CAAjB,CAAlB,C,CAAuC;;AACvC,MAAME,UAAU,GAAER,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,EAAjB,CAAlB,C,CAAwC;AAExC;;AACA,MAAMG,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAA+B;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,MAAIK,KAAK,GAAGL,IAAI,CAACX,IAAL,GAAYY,QAAxB;AACA,MAAIK,KAAK,GAAID,KAAK,GAAC,GAAP,GAAc,GAA1B;AACA,MAAIE,GAAG,GAAGP,IAAI,CAACX,IAAL,GAAY,OAAtB;AACAkB,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAAN,CALiD,CAK3B;;AAEtB,sBACE;AAAA,2BAAE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAG,QAAA,KAAK,EAAC,MAAT;AAAA,kBAAiBR,IAAI,CAACP,IAAL,CAAUC;AAA3B;AAAA;AAAA;AAAA;AAAA,cADA,qBACwC;AAAG,QAAA,KAAK,EAAC,MAAT;AAAA,mBAAiBa,GAAjB,+BAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADxC,eAEA;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAsB,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAEH;AAAR,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,wBAAOJ,OAAO,CAAC;AAAD,uBACV;AAAA,mCAAcF,IAAI,CAACU,OAAnB,oBAA4B;AAAA;AAAA;AAAA;AAAA,kBAA5B,eAA+CV,IAAI,CAACW,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,gBAC0D;AAAA;AAAA;AAAA;AAAA,gBADxE;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBADF;AASD,CAhBD,C,CAiBA;;;MAjBMZ,W;;AAkBN,SAASa,GAAT,GAAe;AACbT,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,sBACE;AAAA,2BAAE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACF;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACCE,SAAS,CAACgB,GAAV,CAAerB,OAAD,iBAAa,QAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,OAAO,CAACsB,IAA1B;AAAgC,UAAA,OAAO,EAAE,IAAzC;AAA+C,UAAA,IAAI,EAAEtB,OAArD;AAA8D,UAAA,QAAQ,EAAEP,SAAS,CAAC,CAAD,CAAT,CAAaI;AAArF;AAAA;AAAA;AAAA;AAAA,gBAA3B;AADD;AAAA;AAAA;AAAA;AAAA,cADE,eAIF;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACCS,UAAU,CAACe,GAAX,CAAgBrB,OAAD,iBAAa,QAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,OAAO,CAACsB,IAA1B;AAAgC,UAAA,OAAO,EAAE,KAAzC;AAAgD,UAAA,IAAI,EAAEtB,OAAtD;AAA+D,UAAA,QAAQ,EAAEP,SAAS,CAAC,CAAD,CAAT,CAAaI;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAA5B;AADD;AAAA;AAAA;AAAA;AAAA,cAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBADF;AAUD;;MAZQuB,G;AAcT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport countries from 'world-countries';\n\n// Sort/slice the countries.\ncountries.sort((a,b) => b.area-a.area); // Sorted by area.\nconst Filtered = countries.filter(country=> country.name.common !== 'Antarctica'); //Remove Antartica\nconst Sliced = Filtered.slice(0,15); // Slice Filter, new list!\nconst FirstList = Filtered.slice(0,5); // First five.\nconst SecondList =Filtered.slice(6,15); // \n \n// Component CountryInfo, creates div-elemnt. Country Info displays information about a country.\nconst CountryInfo = ({data, maxwidth, details}) => {\n  console.log(data)\n  let ratio = data.area / maxwidth;\n  let bredd = (ratio*100) + \"%\";\n  let mil = data.area / 1000000;\n  mil = mil.toFixed(1); //one decimal.\n\n  return (\n    <><div className=\"container\">\n      <p class=\"name\">{data.name.common}</p>  <p class=\"area\">{mil} million km <sup>2</sup> </p>\n      <div className= \"bar\" style={{width: bredd}}> </div>\n      <div> {details // boolean prop details.\n        ? <p> Capital: {data.capital} <br></br> Region: {data.subregion}</p>: <p></p>\n      }</div>\n      </div></>\n  )\n}\n// Creates props\nfunction App() {\n  console.log(Sliced);\n  return (\n    <><div className=\"colum\">\n    <div className=\"left\">\n    {FirstList.map((country) => <CountryInfo Key={country.cca3} details={true} data={country} maxwidth={countries[0].area} />)}\n    </div>\n    <div className=\"right\">\n    {SecondList.map((country) => <CountryInfo Key={country.cca3} details={false} data={country} maxwidth={countries[0].area}/>)}\n    </div>\n    </div></>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}