{"ast":null,"code":"var _jsxFileName = \"/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport countries from 'world-countries'; // Sort/slice the countries. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncountries.sort((a, b) => b.area - a.area); // Storleksordning\n\nconst Filtered = countries.filter(_c = country => country.name.common !== 'Antarctica'); //Remove Antartica\n\n_c2 = Filtered;\nconst Sliced = Filtered.slice(0, 15); // Slice Filter, new list!\n\nconst FirstList = Filtered.slice(0, 5);\nconst SecondList = Filtered.slice(6, 15); // Function, creates div-elemnt\n\nconst CountryInfo = props => {\n  console.log(data);\n  let ratio = data.area / maxwidth;\n  let bredd = ratio * 100 + \"%\";\n  let mil = data.area / 1000000;\n  const detailed = props.detailed;\n  mil = mil.toFixed(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"name\",\n      children: data.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"area\",\n      children: [mil, \" million km \", /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 80\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      style: {\n        maxwidth: bredd\n      },\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), detailed == true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CountryInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: [\" \", props.data.region, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), \"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: [\" \", props.data.capital, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CountryInfo;\nconsole.log(Sliced);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LeftSide\",\n      children: [\"//Creates countryinfo components (props), loop\", FirstList.map(country => /*#__PURE__*/_jsxDEV(CountryInfo, {\n        Key: country.cca3,\n        data: country,\n        maxwidth: countries[0].area,\n        detailed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 35\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightSide\",\n      children: SecondList.map(country => /*#__PURE__*/_jsxDEV(CountryInfo, {\n        Key: country.cca3,\n        data: country,\n        maxwidth: countries[0].area,\n        detailed: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = App;\n;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filtered$countries.filter\");\n$RefreshReg$(_c2, \"Filtered\");\n$RefreshReg$(_c3, \"CountryInfo\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js"],"names":["countries","sort","a","b","area","Filtered","filter","country","name","common","Sliced","slice","FirstList","SecondList","CountryInfo","props","console","log","data","ratio","maxwidth","bredd","mil","detailed","toFixed","region","capital","App","map","cca3"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport countries from 'world-countries';\n\n// Sort/slice the countries. \ncountries.sort((a,b) => b.area-a.area); // Storleksordning\nconst Filtered = countries.filter(country=> country.name.common !== 'Antarctica'); //Remove Antartica\nconst Sliced = Filtered.slice(0,15); // Slice Filter, new list!\nconst FirstList = Filtered.slice(0,5); \nconst SecondList = Filtered.slice(6,15); \n \n// Function, creates div-elemnt\nconst CountryInfo = props => {\n  console.log(data)\n  let ratio = data.area / maxwidth;\n  let bredd = (ratio*100) + \"%\";\n  let mil = data.area / 1000000;\n  const detailed = props.detailed;\n  mil = mil.toFixed(1);\n  return (\n    <div className=\"container\">\n      <p class=\"name\">{data.name.common}</p>  <p class=\"area\">{mil} million km <sup>2</sup> </p>\n      <div className= \"bar\" style={{maxwidth: bredd}}> </div>\n      {detailed == true && \n          <div className=\"CountryInfo\">\n          <p>\n            Region: <span className = \"info\"> {props.data.region} </span>\n            Capital: <span className = \"info\"> {props.data.capital} </span>\n          </p>\n          </div>\n      }\n    </div>\n  );\n\n};\nconsole.log(Sliced);\n\nfunction App() {\n  return (\n    <div className=\"flex-container\">\n        <div className= \"LeftSide\">\n        //Creates countryinfo components (props), loop\n        {FirstList.map(country => <CountryInfo Key={country.cca3} data={country} maxwidth={countries[0].area} detailed={true}></CountryInfo>)}\n        </div>\n        <div className= \"RightSide\">\n        {SecondList.map(country => <CountryInfo Key={country.cca3} data={country} maxwidth={countries[0].area} detailed={false}></CountryInfo>)}\n        </div>\n    \n    </div>\n  \n  );\n  \n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}