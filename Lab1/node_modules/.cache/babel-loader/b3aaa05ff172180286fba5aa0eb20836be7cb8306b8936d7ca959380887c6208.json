{"ast":null,"code":"var _jsxFileName = \"/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/Components/CountryInfo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Component CountryInfo, creates div-elemnt. Country Info displays information about a country.\nconst CountryInfo = ({\n  data,\n  maxwidth,\n  details\n}) => {\n  console.log(data);\n  let ratio = data.area / maxwidth;\n  let bredd = ratio * 100 + \"%\";\n  let mil = data.area / 1000000;\n  mil = mil.toFixed(1); //one decimal.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"name\",\n        children: data.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"area\",\n        children: [mil, \" million km \", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 82\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar\",\n        style: {\n          width: bredd\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", details // boolean prop details.\n        ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Capital: \", data.capital, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 41\n          }, this), \" Region: \", data.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["CountryInfo","data","maxwidth","details","console","log","ratio","area","bredd","mil","toFixed","_jsxDEV","_Fragment","children","className","class","name","common","fileName","_jsxFileName","lineNumber","columnNumber","style","width","capital","subregion","_c","$RefreshReg$"],"sources":["/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/Components/CountryInfo.js"],"sourcesContent":["// Component CountryInfo, creates div-elemnt. Country Info displays information about a country.\nconst CountryInfo = ({data, maxwidth, details}) => {\n    console.log(data)\n    let ratio = data.area / maxwidth;\n    let bredd = (ratio*100) + \"%\";\n    let mil = data.area / 1000000;\n    mil = mil.toFixed(1); //one decimal.\n  \n    return (\n      <><div className=\"container\">\n        <p class=\"name\">{data.name.common}</p>  <p class=\"area\">{mil} million km <sup>2</sup> </p>\n        <div className= \"bar\" style={{width: bredd}}> </div>\n        <div> {details // boolean prop details.\n          ? <p> Capital: {data.capital} <br></br> Region: {data.subregion}</p>: <p></p>\n        }</div>\n        </div></>\n    )\n  }\n\n  export default CountryInfo;"],"mappings":";;;AAAA;AACA,MAAMA,WAAW,GAAGA,CAAC;EAACC,IAAI;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAC/CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjB,IAAIK,KAAK,GAAGL,IAAI,CAACM,IAAI,GAAGL,QAAQ;EAChC,IAAIM,KAAK,GAAIF,KAAK,GAAC,GAAG,GAAI,GAAG;EAC7B,IAAIG,GAAG,GAAGR,IAAI,CAACM,IAAI,GAAG,OAAO;EAC7BE,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eAAEF,OAAA;MAAKG,SAAS,EAAC,WAAW;MAAAD,QAAA,gBAC1BF,OAAA;QAAGI,KAAK,EAAC,MAAM;QAAAF,QAAA,EAAEZ,IAAI,CAACe,IAAI,CAACC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,MAAE,eAAAV,OAAA;QAAGI,KAAK,EAAC,MAAM;QAAAF,QAAA,GAAEJ,GAAG,EAAC,cAAY,eAAAE,OAAA;UAAAE,QAAA,EAAK;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1FV,OAAA;QAAKG,SAAS,EAAE,KAAK;QAACQ,KAAK,EAAE;UAACC,KAAK,EAAEf;QAAK,CAAE;QAAAK,QAAA,EAAC;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpDV,OAAA;QAAAE,QAAA,GAAK,GAAC,EAACV,OAAO,CAAC;QAAA,eACXQ,OAAA;UAAAE,QAAA,GAAG,YAAU,EAACZ,IAAI,CAACuB,OAAO,EAAC,GAAC,eAAAb,OAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,aAAS,EAACpB,IAAI,CAACwB,SAAS;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAAEV,OAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBAAE,CAAC;AAEf,CAAC;AAAAK,EAAA,GAhBG1B,WAAW;AAkBf,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}