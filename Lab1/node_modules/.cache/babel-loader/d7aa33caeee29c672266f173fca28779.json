{"ast":null,"code":"var _jsxFileName = \"/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport countries from 'world-countries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ncountries.sort((a, b) => b.area - a.area); //storleksordning\n\nconst Filtered = countries.filter(_c = country => country.name.common !== 'Antarctica'); //Remove Antartica\n\n_c2 = Filtered;\nconst Sliced = Filtered.slice(0, 15); //Slice Filter, new list!\n\nconst CountryInfo = ({\n  data,\n  maxwidth\n}) => {\n  console.log(data);\n  let ratio = data.area / maxwidth;\n  let bredd = ratio * 100 + \"%\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nameandarea\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [data.name.common, \" \", data.area, \" km \", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar\",\n        style: {\n          width: bredd\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = CountryInfo;\n\nfunction App() {\n  console.log(Sliced);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: Sliced.map(country => /*#__PURE__*/_jsxDEV(CountryInfo, {\n      Key: country.cca3,\n      data: country,\n      maxwidth: countries[0].area\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filtered$countries.filter\");\n$RefreshReg$(_c2, \"Filtered\");\n$RefreshReg$(_c3, \"CountryInfo\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js"],"names":["countries","sort","a","b","area","Filtered","filter","country","name","common","Sliced","slice","CountryInfo","data","maxwidth","console","log","ratio","bredd","width","App","map","cca3"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,iBAAtB;;;AAEAA,SAAS,CAACC,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,IAAF,GAAOF,CAAC,CAACE,IAAjC,E,CAAwC;;AACxC,MAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAV,MAAiBC,OAAO,IAAGA,OAAO,CAACC,IAAR,CAAaC,MAAb,KAAwB,YAAnD,CAAjB,C,CAAmF;;MAA7EJ,Q;AACN,MAAMK,MAAM,GAAGL,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,EAAjB,CAAf,C,CAAqC;;AAErC,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAII,KAAK,GAAGJ,IAAI,CAACT,IAAL,GAAYU,QAAxB;AACA,MAAII,KAAK,GAAID,KAAK,GAAC,GAAP,GAAc,GAA1B;AACA,sBACE;AAAA,2BAAE;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,8BAA+B;AAAA,mBAC7BJ,IAAI,CAACL,IAAL,CAAUC,MADmB,OACVI,IAAI,CAACT,IADK,uBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/B,eAGF;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAsB,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAED;AAAR,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBADF;AAUD,CAdD;;MAAMN,W;;AAeN,SAASQ,GAAT,GAAe;AACbL,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEIA,MAAM,CAACW,GAAP,CAAYd,OAAD,iBAAa,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACe,IAA1B;AAAgC,MAAA,IAAI,EAAEf,OAAtC;AAA+C,MAAA,QAAQ,EAAEP,SAAS,CAAC,CAAD,CAAT,CAAaI;AAAtE;AAAA;AAAA;AAAA;AAAA,YAAxB;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MAVQgB,G;AAcT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport countries from 'world-countries';\n\ncountries.sort((a,b) => b.area-a.area); //storleksordning\nconst Filtered = countries.filter(country=> country.name.common !== 'Antarctica'); //Remove Antartica\nconst Sliced = Filtered.slice(0,15); //Slice Filter, new list!\n \nconst CountryInfo = ({data, maxwidth}) => {\n  console.log(data)\n  let ratio = data.area / maxwidth;\n  let bredd = (ratio*100) + \"%\";\n  return (\n    <><div className = \"nameandarea\"><p>\n       {data.name.common} {data.area} km <sup>2</sup>\n    </p>\n    <div className= \"bar\" style={{width: bredd}}> </div>\n\n    </div></>\n  \n  \n  )\n}\nfunction App() {\n  console.log(Sliced);\n \n  return (\n    <div className=\"box\">\n      {\n        Sliced.map((country) => <CountryInfo Key={country.cca3} data={country} maxwidth={countries[0].area}/>)\n      }\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}