{"ast":null,"code":"var _jsxFileName = \"/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport countries from \"world-countries\";\nimport CountryInfo from \"./Components/CountryInfo\";\n\n// Sort/slice the countries.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ncountries.sort((a, b) => b.area - a.area); // Sorted by area.\nconst Filtered = countries.filter(_c = country => country.name.common !== \"Antarctica\"); // Remove Antartica\n_c2 = Filtered;\nconst Sliced = Filtered.slice(0, 15); // Slice Filter, new list!\nconst FirstList = Filtered.slice(0, 5); // List of the first five countries.\nconst SecondList = Filtered.slice(6, 15); // List of the countries from the 6th to the 15th.\n\n// Creates props\nfunction App() {\n  console.log(Sliced);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colum\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: FirstList.map(country => /*#__PURE__*/_jsxDEV(CountryInfo, {\n          Key: country.cca3,\n          details: true,\n          data: country,\n          maxwidth: countries[0].area\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: SecondList.map(country => /*#__PURE__*/_jsxDEV(CountryInfo, {\n          Key: country.cca3,\n          details: false,\n          data: country,\n          maxwidth: countries[0].area\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Filtered$countries.filter\");\n$RefreshReg$(_c2, \"Filtered\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["logo","countries","CountryInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","sort","a","b","area","Filtered","filter","_c","country","name","common","_c2","Sliced","slice","FirstList","SecondList","App","console","log","children","className","map","Key","cca3","details","data","maxwidth","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport countries from \"world-countries\";\nimport CountryInfo from \"./Components/CountryInfo\";\n\n// Sort/slice the countries.\ncountries.sort((a, b) => b.area - a.area); // Sorted by area.\nconst Filtered = countries.filter(\n  (country) => country.name.common !== \"Antarctica\"\n); // Remove Antartica\nconst Sliced = Filtered.slice(0, 15); // Slice Filter, new list!\nconst FirstList = Filtered.slice(0, 5); // List of the first five countries.\nconst SecondList = Filtered.slice(6, 15); // List of the countries from the 6th to the 15th.\n\n// Creates props\nfunction App() {\n  console.log(Sliced);\n  return (\n    <>\n      <div className=\"colum\">\n        <div className=\"left\">\n          {FirstList.map((country) => (\n            <CountryInfo\n              Key={country.cca3}\n              details={true}\n              data={country}\n              maxwidth={countries[0].area}\n            />\n          ))}\n        </div>\n        <div className=\"right\">\n          {SecondList.map((country) => (\n            <CountryInfo\n              Key={country.cca3}\n              details={false}\n              data={country}\n              maxwidth={countries[0].area}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,WAAW,MAAM,0BAA0B;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACAL,SAAS,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;AAC3C,MAAMC,QAAQ,GAAGV,SAAS,CAACW,MAAM,CAAAC,EAAA,GAC9BC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,MAAM,KAAK,YACvC,CAAC,CAAC,CAAC;AAAAC,GAAA,GAFGN,QAAQ;AAGd,MAAMO,MAAM,GAAGP,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACtC,MAAMC,SAAS,GAAGT,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxC,MAAME,UAAU,GAAGV,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;AAE1C;AACA,SAASG,GAAGA,CAAA,EAAG;EACbC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB,oBACEd,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKsB,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACpBrB,OAAA;QAAKsB,SAAS,EAAC,MAAM;QAAAD,QAAA,EAClBL,SAAS,CAACO,GAAG,CAAEb,OAAO,iBACrBV,OAAA,CAACF,WAAW;UACV0B,GAAG,EAAEd,OAAO,CAACe,IAAK;UAClBC,OAAO,EAAE,IAAK;UACdC,IAAI,EAAEjB,OAAQ;UACdkB,QAAQ,EAAE/B,SAAS,CAAC,CAAC,CAAC,CAACS;QAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAD,QAAA,EACnBJ,UAAU,CAACM,GAAG,CAAEb,OAAO,iBACtBV,OAAA,CAACF,WAAW;UACV0B,GAAG,EAAEd,OAAO,CAACe,IAAK;UAClBC,OAAO,EAAE,KAAM;UACfC,IAAI,EAAEjB,OAAQ;UACdkB,QAAQ,EAAE/B,SAAS,CAAC,CAAC,CAAC,CAACS;QAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACC,GAAA,GA5BQf,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAT,EAAA,EAAAI,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}