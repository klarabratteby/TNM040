{"ast":null,"code":"var _jsxFileName = \"/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport countries from 'world-countries'; // Sort/slice the countries. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ncountries.sort((a, b) => b.area - a.area); // Storleksordning\n\nconst Filtered = countries.filter(_c = country => country.name.common !== 'Antarctica'); //Remove Antartica\n\n_c2 = Filtered;\nconst Sliced = Filtered.slice(0, 15); // Slice Filter, new list!\n// Function, creates div-elemnt\n\nconst CountryInfo = ({\n  data,\n  maxwidth,\n  details\n}) => {\n  console.log(data);\n  let ratio = data.area / maxwidth;\n  let bredd = ratio * 100 + \"%\";\n  let mil = data.area / 1000000;\n  mil = mil.toFixed(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LeftSide\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"name\",\n          children: data.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"area\",\n          children: [mil, \" million km \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 80\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          style: {\n            width: bredd\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RightSide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", details ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Capital: \", data.capital, \" Region: \", data.subregion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = CountryInfo;\n\nfunction App() {\n  console.log(Sliced);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: //Creates countryinfo components (props), loop\n    Sliced.map((country, i) => /*#__PURE__*/_jsxDEV(CountryInfo, {\n      Key: country.cca3,\n      data: country,\n      maxwidth: countries[0].area,\n      details: i < 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filtered$countries.filter\");\n$RefreshReg$(_c2, \"Filtered\");\n$RefreshReg$(_c3, \"CountryInfo\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/klarabratteby/Desktop/Skola/TNM040/lab1/src/App.js"],"names":["countries","sort","a","b","area","Filtered","filter","country","name","common","Sliced","slice","CountryInfo","data","maxwidth","details","console","log","ratio","bredd","mil","toFixed","width","capital","subregion","App","map","i","cca3"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,iBAAtB,C,CAEA;;;;AACAA,SAAS,CAACC,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,IAAF,GAAOF,CAAC,CAACE,IAAjC,E,CAAwC;;AACxC,MAAMC,QAAQ,GAAGL,SAAS,CAACM,MAAV,MAAiBC,OAAO,IAAGA,OAAO,CAACC,IAAR,CAAaC,MAAb,KAAwB,YAAnD,CAAjB,C,CAAmF;;MAA7EJ,Q;AACN,MAAMK,MAAM,GAAGL,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAiB,EAAjB,CAAf,C,CAAqC;AAErC;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAA+B;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,MAAIK,KAAK,GAAGL,IAAI,CAACT,IAAL,GAAYU,QAAxB;AACA,MAAIK,KAAK,GAAID,KAAK,GAAC,GAAP,GAAc,GAA1B;AACA,MAAIE,GAAG,GAAGP,IAAI,CAACT,IAAL,GAAY,OAAtB;AACAgB,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAAN;AACA,sBACE;AAAA,2BAAE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACA;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA,oBAAiBR,IAAI,CAACL,IAAL,CAAUC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADA,qBACwC;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA,qBAAiBW,GAAjB,+BAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxC,eAEA;AAAK,UAAA,SAAS,EAAE,KAAhB;AAAsB,UAAA,KAAK,EAAE;AAACE,YAAAA,KAAK,EAAEH;AAAR,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA;AAAA,0BAAOJ,OAAO,gBACV;AAAA,qCAAcF,IAAI,CAACU,OAAnB,eAAqCV,IAAI,CAACW,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,gBACgD;AAAA;AAAA;AAAA;AAAA,kBAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBADF;AAaD,CAnBD;;MAAMZ,W;;AAoBN,SAASa,GAAT,GAAe;AACbT,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEI;AACAA,IAAAA,MAAM,CAACgB,GAAP,CAAW,CAACnB,OAAD,EAAUoB,CAAV,kBAAgB,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEpB,OAAO,CAACqB,IAA1B;AAAgC,MAAA,IAAI,EAAErB,OAAtC;AAA+C,MAAA,QAAQ,EAAEP,SAAS,CAAC,CAAD,CAAT,CAAaI,IAAtE;AAA4E,MAAA,OAAO,EAAGuB,CAAC,GAAE;AAAzF;AAAA;AAAA;AAAA;AAAA,YAA3B;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;MAVQF,G;AAYT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport countries from 'world-countries';\n\n// Sort/slice the countries. \ncountries.sort((a,b) => b.area-a.area); // Storleksordning\nconst Filtered = countries.filter(country=> country.name.common !== 'Antarctica'); //Remove Antartica\nconst Sliced = Filtered.slice(0,15); // Slice Filter, new list!\n \n// Function, creates div-elemnt\nconst CountryInfo = ({data, maxwidth, details}) => {\n  console.log(data)\n  let ratio = data.area / maxwidth;\n  let bredd = (ratio*100) + \"%\";\n  let mil = data.area / 1000000;\n  mil = mil.toFixed(1);\n  return (\n    <><div className=\"container\">\n      <div className=\"LeftSide\">\n      <p class=\"name\">{data.name.common}</p>  <p class=\"area\">{mil} million km <sup>2</sup> </p>\n      <div className= \"bar\" style={{width: bredd}}> </div>\n      </div>\n      <div className=\"RightSide\">\n      <div> {details\n        ? <p> Capital: {data.capital} Region: {data.subregion}</p>: <p></p>\n      }</div>\n      </div>\n      </div></>\n  )\n}\nfunction App() {\n  console.log(Sliced);\n  return (\n    <div className=\"box\">\n      {\n        //Creates countryinfo components (props), loop\n        Sliced.map((country, i) => <CountryInfo Key={country.cca3} data={country} maxwidth={countries[0].area} details ={i <5 }/>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}